<skuid__page unsavedchangeswarning="yes" personalizationmode="server" showsidebar="true" showheader="true">
	<background type="none"/>
	<models>
		<model id="masterPagesLookup" query="true" processonclient="true" type="readwrite" datasource="SkuidLocal" label="Page" labelplural="Pages" namefield="name" uniqueId="sk-3dKp-1466">
			<fields uniqueId="sk-3dKp-1472">
				<field id="id" label="Id" readonly="true" displaytype="TEXT" uniqueId="sk-3dKp-1474"/>
				<field id="name" label="Name" displaytype="TEXT" length="255" required="true" uniqueId="sk-3dKp-1475"/>
			</fields>
			<idfields>
				<field>id</field>
			</idfields>
			<conditions logic="" uniqueId="sk-3dKp-1484">
				<condition type="fieldvalue" value="" enclosevalueinquotes="true" sourcetype="param" sourceparam="is_master_page" state="filterableoff" inactive="true" name="is_master_page"/>
			</conditions>
			<actions uniqueId="sk-3dKp-1485"/>
			<methods uniqueId="sk-3dKp-1467">
				<method type="query" verb="GET" uniqueId="sk-3dKp-1468" payloadcontenttype="JSON" limitmethod="simple" simplerecordslimitparameter="limit" limit="100" paginationmethod="simple" offsetparameter="offset" endpoint="/objects/page?where={&quot;is_master_page&quot;:&quot;true&quot;}"/>
			</methods>
		</model>
		<model id="pages" query="true" processonclient="true" type="readwrite" datasource="SkuidLocal" label="Page" labelplural="Pages" namefield="name" uniqueId="sk-3dKp-1466">
			<fields uniqueId="sk-3dKp-1472">
				<field id="api_version" label="Skuid API Version" displaytype="TEXT" uniqueId="sk-3dKp-1473"/>
				<field id="id" label="Id" readonly="true" displaytype="TEXT" uniqueId="sk-3dKp-1474"/>
				<field id="name" label="Name" displaytype="TEXT" length="255" required="true" uniqueId="sk-3dKp-1475"/>
				<field id="is_master_page" label="Is Principal Page" displaytype="BOOLEAN" uniqueId="sk-3dKp-1476"/>
				<field id="master_page_id" label="Principal Page" displaytype="TEXT" accessible="true" filterable="true" digits="" uniqueId="sk-3dKp-1480" uionly="false" ogdisplaytype="TEXT" datasource="SkuidLocal" keyfield="master_page_id">
					<batchfields/>
				</field>
				<field id="content" label="Content" ispolymorphic="false" isnamepointing="false" displaytype="STRING" accessible="true" filterable="true"/>
				<field id="master_page_name" displaytype="FORMULA" uionly="true" ogdisplaytype="TEXT" readonly="true" returntype="TEXT">
					<formula>MODEL_LOOKUP('masterPagesLookup', 'name', 'id', {{master_page_id}})</formula>
				</field>
			</fields>
			<idfields>
				<field>id</field>
			</idfields>
			<conditions logic="" uniqueId="sk-3dKp-1484">
				<condition type="fieldvalue" value="" enclosevalueinquotes="true" sourcetype="param" sourceparam="search" state="filterableoff" inactive="true" name="search"/>
				<condition type="fieldvalue" value="" enclosevalueinquotes="true" sourcetype="param" sourceparam="apiVersion" state="filterableoff" inactive="true" name="apiVersion"/>
			</conditions>
			<actions uniqueId="sk-3dKp-1485"/>
			<methods uniqueId="sk-3dKp-1467">
				<method type="query" verb="GET" uniqueId="sk-3dKp-1468" payloadcontenttype="JSON" limitmethod="simple" simplerecordslimitparameter="limit" limit="20" paginationmethod="simple" offsetparameter="offset" endpoint="/objects/page?order=-updated_at{{#search}}&amp;search={{.}}{{/search}}&amp;where={&quot;is_master_page&quot;:&quot;false&quot;{{#apiVersion}},&quot;api_version&quot;:&quot;{{apiVersion}}&quot;{{/apiVersion}}}"/>
				<method type="insert" verb="POST" successif="requestsucceeds" sendchanges="asjsoninbody" insertresponse="recordinbody" endpoint="/objects/page" uniqueId="sk-3dKp-1469"/>
				<method type="update" verb="PATCH" successif="requestsucceeds" sendchanges="asjsoninbody" endpoint="/objects/page/{{id}}" uniqueId="sk-3dKp-1470"/>
				<method type="delete" verb="DELETE" endpoint="/objects/page/{{id}}" successif="requestsucceeds" uniqueId="sk-3dKp-1471"/>
			</methods>
		</model>
		<model id="variableStore" query="true" createrowifnonefound="false" datasource="Ui-Only" processonclient="true">
			<fields>
				<field id="oldContent" displaytype="TEXT" length="255" defaultvaluetype="fieldvalue" label="Old XML" helptext="This XML is going to be converted."/>
				<field id="newContent" displaytype="TEXT" length="255" defaultvaluetype="fieldvalue" label="New XML" helptext="This XML has been converted into the page type you've selected" placeholder="This content will be generated by the conversion."/>
				<field id="masterPageId" displaytype="TEXT" length="255" label="Principal Page ID" helptext="The ID of the principal page you wish to link this page to. "/>
				<field id="masterPageContent" displaytype="TEXT" length="255" label="Principal Page XML" helptext="Enter the XML of the principal page you'll be linking the dependent page to."/>
				<field id="masterPageName" displaytype="TEXT" length="255" label="masterPageName"/>
				<field id="newName" displaytype="TEXT" length="255" label="Name"/>
				<field id="apiVersion" displaytype="TEXT" length="255"/>
			</fields>
			<conditions/>
			<actions/>
		</model>
		<model id="masterPages" query="false" processonclient="true" type="readwrite" datasource="SkuidLocal" label="Page" labelplural="Pages" namefield="name" uniqueId="sk-3dKp-1466">
			<fields uniqueId="sk-3dKp-1472">
				<field id="id" label="Id" readonly="true" displaytype="TEXT" uniqueId="sk-3dKp-1474"/>
				<field id="name" label="Name" displaytype="TEXT" length="255" required="true" uniqueId="sk-3dKp-1475"/>
				<field id="content" label="Content" ispolymorphic="false" isnamepointing="false" displaytype="STRING" accessible="true" filterable="true"/>
			</fields>
			<idfields>
				<field>id</field>
			</idfields>
			<conditions logic="" uniqueId="sk-3dKp-1484">
				<condition type="fieldvalue" value="" enclosevalueinquotes="true" sourcetype="param" sourceparam="is_master_page" state="filterableoff" inactive="true" name="is_master_page"/>
				<condition type="modelmerge" value="" sourcetype="param" sourceparam="apiVersion" inactive="false" operator="=" model="variableStore" enclosevalueinquotes="true" mergefield="apiVersion" novaluebehavior="deactivate"/>
				<condition type="fieldvalue" value="" enclosevalueinquotes="true" sourcetype="param" sourceparam="search" state="filterableoff" inactive="true" name="search"/>
			</conditions>
			<actions uniqueId="sk-3dKp-1485"/>
			<methods uniqueId="sk-3dKp-1467">
				<method type="query" verb="GET" uniqueId="sk-3dKp-1468" payloadcontenttype="JSON" limitmethod="simple" simplerecordslimitparameter="limit" limit="20" paginationmethod="simple" offsetparameter="offset" endpoint="/objects/page?where={&quot;is_master_page&quot;:&quot;true&quot;{{#apiVersion}},&quot;api_version&quot;:&quot;{{apiVersion}}&quot;{{/apiVersion}}}{{#search}}&amp;search={{.}}{{/search}}"/>
			</methods>
		</model>
	</models>
	<components>
		<skuid__table uniqueid="sk-3PxA-602" allowColumnOrdering="false" resetPaginationOnQuery="false" showListHeader="true" showListFooter="true" mode="readonly" model="pages" pageSize="10" showSaveCancel="false" showErrorsInline="true" rowHeightStrategy="fit" allowColumnHiding="false" allowSortingByColumn="false">
			<fields>
				<field type="COMBO" label="Page Name" template="{{name}}" redirectType="customurl" window="blank" rootUrl="/ui/page/compose/{{id}}" uniqueid="fi-2WGq-27317">
					<interactions/>
				</field>
				<field uniqueid="fi-3PxA-603" id="api_version"/>
				<field type="COMBO" label="Principal Page Name" uniqueid="fi-2WHB-30204" redirectType="customurl" window="blank" rootUrl="/ui/page/compose/{{master_page_id}}" template="{{master_page_name}}"/>
			</fields>
			<filters>
				<skuid__filter uniqueId="sk-2WFs-14039" type="select" conditionSource="manual" labelMode="manual" label="API Version" conditionName="apiVersion" createFilterOffOption="true" filterOffOptionLabel="All" rememberInPersonalization="false">
					<sources>
						<source type="manual" effectsbehavior="justdefault">
							<options>
								<option label="v1" type="simple" value="v1"/>
								<option label="v2" type="simple" value="v2"/>
							</options>
						</source>
					</sources>
				</skuid__filter>
			</filters>
			<actions/>
			<massActions></massActions>
			<rowActions>
				<action type="multi" label="Convert to normal page" icon="sk-webicon-font-awesome:chain-broken">
					<actions>
						<action type="action-sequence" action-sequence-id="25e9872b-0c61-4447-81f4-4325508f5578"/>
						<action type="createRow" model="variableStore" appendorprepend="prepend" defaultmodefornewitems="edit" affectedrows="context">
							<defaults>
								<default valuesource="fieldvalue" field="oldContent" enclosevalueinquotes="true" value="{{content}}"/>
								<default valuesource="fieldvalue" field="newName" enclosevalueinquotes="true" value="{{name}}-Detached"/>
								<default valuesource="fieldvalue" field="apiVersion" enclosevalueinquotes="true" value="{{api_version}}"/>
							</defaults>
						</action>
						<action type="custom" snippet="childPageToNormalPage">
							<onerroractions>
								<action type="blockUI" message="There was an error" timeout="3000"/>
							</onerroractions>
						</action>
						<action type="action-sequence" action-sequence-id="08bc0954-07ab-4042-93dd-f4b3266dbdf3"/>
					</actions>
					<renderConditions logictype="and">
						<rendercondition type="blank" operator="!=" fieldmodel="pages" sourcetype="fieldvalue" field="master_page_id" fieldtargetobjects="SkuidLocal" value="null" enclosevalueinquotes="false"/>
					</renderConditions>
				</action>
				<action type="multi" label="Convert to dependent page" icon="sk-webicon-font-awesome:sitemap">
					<actions>
						<action type="action-sequence" action-sequence-id="25e9872b-0c61-4447-81f4-4325508f5578"/>
						<action type="createRow" model="variableStore" appendorprepend="prepend" defaultmodefornewitems="edit" affectedrows="context">
							<defaults>
								<default valuesource="fieldvalue" field="oldContent" enclosevalueinquotes="true" value="{{content}}"/>
								<default valuesource="fieldvalue" field="newName" enclosevalueinquotes="true" value="{{name}}"/>
								<default valuesource="fieldvalue" field="apiVersion" enclosevalueinquotes="true" value="{{api_version}}"/>
							</defaults>
						</action>
						<action type="action-sequence" action-sequence-id="3fd5a006-aecc-4f5a-88bc-0f21be565b1e"/>
					</actions>
					<renderConditions logictype="and">
						<rendercondition type="blank" fieldmodel="pages" sourcetype="fieldvalue" fieldtargetobjects="SkuidLocal" enclosevalueinquotes="false" sourceproperty="isNew" operator="=" field="master_page_id"/>
						<rendercondition type="fieldvalue" operator="!=" enclosevalueinquotes="false" fieldmodel="pages" sourcetype="fieldvalue" field="is_master_page" fieldtargetobjects="SkuidLocal" value="true"/>
					</renderConditions>
				</action>
			</rowActions>
			<sorting/>
			<filtering enableSearch="true" searchMethod="server" emptySearchBehavior="query" searchConditionName="search"/>
			<exportProperties useTableColumns="true" enableExportOptionOnTable="false"/>
		</skuid__table>
	</components>
	<resources>
		<javascript>
			<jsitem location="inlinesnippet" cachelocation="false" name="childPageToNormalPage">// childPageToNormalPage
console.log('Starting conversion')
// Skuid variables
var variableStore = skuid.$M('variableStore')
var r = variableStore.getFirstRow()
var oldContent = r.oldContent

// Handle the XML
var parser = new DOMParser();
var xmlDoc = parser.parseFromString(oldContent, "text/xml");

// Now get all the old components into an array
pageRegions = Array.prototype.slice.call(xmlDoc.getElementsByTagName('pageregioncontent'))
components = []
pageRegions.forEach(function(region){
    if (region.children[0]) {
        for (let component of region.children[0].children) {
            components.push(component)}
    } else
    {
        console.log('Page region has no components, moving on.')
    }
})

// Collate all the components into a new node on the new page
var newComponentsNode = xmlDoc.createElement("components");
components.forEach(function(c){
  newComponentsNode.append(c)
})

// Remove the page regions node
var skuidPage = (r.apiVersion=='v2') ? xmlDoc.getElementsByTagName('skuid__page')[0] : xmlDoc.getElementsByTagName('skuidpage')[0]
var pageRegionContents = xmlDoc.getElementsByTagName('pageregioncontents')[0]
skuidPage.removeChild(pageRegionContents)

// Move the components node beneath models node
xmlDoc.getElementsByTagName('models')[0].after(newComponentsNode)
// Stringify the XML and update the model row
var oSerializer = new XMLSerializer();
var sXML = oSerializer.serializeToString(xmlDoc);
variableStore.updateRow(r,{newContent: sXML})</jsitem>
			<jsitem location="inlinesnippet" name="normalPageToChildPage" cachelocation="false">// normalPageToChildPage
console.log('Starting conversion')
// Skuid variables
var pagesModel = skuid.$M('pages')
var variableStore = skuid.$M('variableStore')
var r = variableStore.getFirstRow()
var oldContent = r.oldContent
var principalPage = r.masterPageContent

// Handle the XML
var parser = new DOMParser();
var principalPageXml = parser.parseFromString(principalPage, "text/xml");
var xmlDoc = parser.parseFromString(oldContent, "text/xml");
var skuidPage = (r.apiVersion=='v2') ? xmlDoc.getElementsByTagName('skuid__page')[0] : xmlDoc.getElementsByTagName('skuidpage')[0]

// Get all page region areas in principal page
var pageRegionAreas = (r.apiVersion=='v2')? Array.prototype.slice.call(principalPageXml.getElementsByTagName('skuid__pageRegion')): Array.prototype.slice.call(principalPageXml.getElementsByTagName('pageregion'))

if (pageRegionAreas.length === 0) {
  throw ("The chosen principal page has no page regions. Please update the page and try again.")
} else {
  // Create pageregionscontents node to nest all pageregioncontent nodes
  var pageregioncontents = xmlDoc.createElement("pageregioncontents");
  xmlDoc.getElementsByTagName('models')[0].after(pageregioncontents)

  // Parse existing page regions, and create nodes for dependent page
  pageRegionAreas.forEach(function (pra) {
    var regionid = pra.getAttribute('uniqueid')
    newPageRegion = xmlDoc.createElement("pageregioncontent");
    newPageRegion.setAttribute("regionid", regionid)
    newPageRegion.setAttribute('uniqueid', skuid.utils.generateUniqueId())
    pageregioncontents.append(newPageRegion)
  })

  // Now get all the old components into an array
  components = []
  var arrayOfComponentNodes = Array.prototype.slice.call(xmlDoc.getElementsByTagName('components'))
  arrayOfComponentNodes.forEach(function (cn) {
    if (cn.parentElement == skuidPage){
      arrayOfComponents = Array.prototype.slice.call(cn.children)
      arrayOfComponents.forEach(function (c) {
        components.push(c)
      })
    }
  })

  // Collate all the components into a new node on the new page
  var newComponentsNode = xmlDoc.createElement("components");
  components.forEach(function (c) {
    newComponentsNode.append(c)
  })

  // Clean up the nodes
  arrayOfComponentNodes.forEach(function (ocn) {
    if (ocn.parentElement == skuidPage) {
      skuidPage.removeChild(ocn)
    }
  })

  // Move the components node beneath models node
  xmlDoc.getElementsByTagName('pageregioncontent')[0].append(newComponentsNode)

  // Stringify the XML and update the model row
  var oSerializer = new XMLSerializer();
  var sXML = oSerializer.serializeToString(xmlDoc);
  variableStore.updateRow(r, { newContent: sXML })
}</jsitem>
		</javascript>
		<actionsequences uniqueid="sk-3P_R-725">
			<actionsequence id="8dabbb26-bf41-4f73-97b0-ef87a3d05ca9" label="createNewPageFromConvertedContent" type="reusable" uniqueid="sk-3P_R-726">
				<actions>
					<action type="createRow" model="pages" appendorprepend="prepend" defaultmodefornewitems="edit" affectedrows="all">
						<defaults>
							<default valuesource="fieldvalue" field="name" enclosevalueinquotes="true" value="{{$Model.variableStore.data.0.newName}}"/>
							<default valuesource="fieldvalue" field="content" enclosevalueinquotes="true" value="{{$Model.variableStore.data.0.newContent}}"/>
							<default valuesource="fieldvalue" field="api_version" enclosevalueinquotes="true" value="{{$Model.variableStore.data.0.apiVersion}}"/>
						</defaults>
					</action>
					<action type="branch" whenfinished="continue" model="variableStore">
						<formula>{{masterPageId}}</formula>
						<iftrueactions>
							<action type="updateRow" fieldmodel="pages" affectedrows="context">
								<updates>
									<update valuesource="fieldvalue" field="master_page_id" enclosevalueinquotes="true" value="{{$Model.variableStore.data.0.masterPageId}}"/>
								</updates>
							</action>
						</iftrueactions>
					</action>
					<action type="save" rollbackonanyerror="true">
						<models>
							<model>pages</model>
						</models>
						<onerroractions>
							<action type="cancel" message="There was an error" timeout="3000">
								<models>
									<model>pages</model>
								</models>
							</action>
						</onerroractions>
					</action>
					<action type="action-sequence" action-sequence-id="25e9872b-0c61-4447-81f4-4325508f5578"/>
				</actions>
				<description>Uses the currently stored name and content variables to create a new row on the pages model and save it. If the variable store has a principal page ID, we're trying to save a new dependent page, so there's a branch to account for that.</description>
				<inputs/>
			</actionsequence>
			<actionsequence id="3fd5a006-aecc-4f5a-88bc-0f21be565b1e" label="showMasterPageList" type="reusable" uniqueid="sk-3Tqu-4752">
				<actions>
					<action type="requeryModels" behavior="standard">
						<models>
							<model>masterPages</model>
						</models>
					</action>
					<action type="showModal">
						<skuid__modal title="Principal page" width="90%">
							<components>
								<skuid__text uniqueid="sk-3Us7-5276" contents="Which principal page would you like to use?"/>
								<skuid__table uniqueid="sk-3TiA-1666" allowColumnOrdering="false" resetPaginationOnQuery="false" showListHeader="true" showListFooter="true" mode="read" model="masterPages" pageSize="10" showSaveCancel="false" showErrorsInline="true" rowHeightStrategy="fit" allowColumnHiding="false" allowSortingByColumn="false">
									<fields>
										<field type="COMBO" label="Principal Page Name" uniqueid="fi-2WHP-36264" template="{{name}}" redirectType="customurl" window="blank" rootUrl="/ui/page/compose/{{id}}">
											<interactions/>
										</field>
									</fields>
									<actions/>
									<massActions/>
									<rowActions>
										<action type="multi" label="Use as principal page" icon="sk-webicon-font-awesome:magic">
											<actions>
												<action type="updateRow" model="variableStore" appendorprepend="prepend" defaultmodefornewitems="edit" affectedrows="context" fieldmodel="variableStore">
													<defaults>
														<default valuesource="fieldvalue" field="masterPageId" enclosevalueinquotes="true" value="{{id}}"/>
														<default valuesource="fieldvalue" field="masterPageContent" enclosevalueinquotes="true" value="{{content}}"/>
													</defaults>
													<updates>
														<update valuesource="fieldvalue" field="masterPageId" enclosevalueinquotes="true" value="{{id}}"/>
														<update valuesource="fieldvalue" field="masterPageContent" enclosevalueinquotes="true" value="{{content}}"/>
														<update valuesource="fieldvalue" field="masterPageName" enclosevalueinquotes="true" value="{{name}}"/>
														<update valuesource="fieldvalue" value="{{name}}_{{$Model.variableStore.data.0.newName}}" field="newName" enclosevalueinquotes="true"/>
													</updates>
												</action>
												<action type="closeModals" closebehavior="close"/>
												<action type="custom" snippet="normalPageToChildPage"/>
												<action type="action-sequence" action-sequence-id="08bc0954-07ab-4042-93dd-f4b3266dbdf3">
													<inputs>
														<input name="newPageName" value="{{$Model.variableStore.data.0.masterPageName}}-{{name}}"/>
													</inputs>
												</action>
											</actions>
										</action>
									</rowActions>
									<sorting/>
									<filtering enableSearch="true" searchMethod="server" emptySearchBehavior="query" searchConditionName="search"/>
									<exportProperties useTableColumns="true" enableExportOptionOnTable="false"/>
								</skuid__table>
							</components>
						</skuid__modal>
					</action>
				</actions>
				<description>This popup allows users to pick a principal page for normal-page-to-child-page conversion. The selected page is sent to the variable store.</description>
			</actionsequence>
			<actionsequence id="25e9872b-0c61-4447-81f4-4325508f5578" label="clearVariableStore" type="reusable" uniqueid="sk-3Tqu-4753">
				<actions>
					<action type="emptyModelData">
						<models>
							<model>variableStore</model>
						</models>
					</action>
				</actions>
				<description>An easy to remember action to clearing the variable store to ensure we always only have one row.</description>
			</actionsequence>
			<actionsequence id="08bc0954-07ab-4042-93dd-f4b3266dbdf3" label="promptForName" type="reusable" uniqueid="sk-3V4t-2676">
				<actions>
					<action type="showModal">
						<skuid__modal title="Page" width="90%">
							<components>
								<skuid__text uniqueid="sk-3Uno-3087" contents="What would you like to name the new page?"/>
								<skuid__form uniqueid="sk-3Unk-3049" model="variableStore" mode="edit" labelPlacement="beside" showHeader="true" showSaveCancel="false" showErrorsInline="true">
									<columns>
										<column maxWidth="100%">
											<sections>
												<section collapsible="no" showHeading="false" title="Section A">
													<fields>
														<skuid__field uniqueid="sk-3Unn-3082" id="newName"/>
													</fields>
												</section>
											</sections>
										</column>
									</columns>
								</skuid__form>
								<skuid__buttonSet uniqueid="sk-3UoV-4666" model="variableStore">
									<groups>
										<skuid__buttonGroup>
											<buttons>
												<skuid__button uniqueid="sk-3UoV-4671" label="Save" styleSettingsVariant="primary">
													<actions>
														<action type="action-sequence" action-sequence-id="8dabbb26-bf41-4f73-97b0-ef87a3d05ca9"/>
														<action type="closeModals" closebehavior="close"/>
													</actions>
												</skuid__button>
												<skuid__button uniqueid="sk-3UoV-4675" label="Cancel" styleSettingsVariant="primary">
													<actions>
														<action type="action-sequence" action-sequence-id="25e9872b-0c61-4447-81f4-4325508f5578"/>
														<action type="closeAllPopups"/>
													</actions>
												</skuid__button>
											</buttons>
										</skuid__buttonGroup>
									</groups>
								</skuid__buttonSet>
							</components>
						</skuid__modal>
					</action>
				</actions>
				<description>Prompts the user for the name of their converted page. Uses the variable store and calls the createNewPageFromConvertedContent action sequence. Name defaults are set in the row actions.</description>
			</actionsequence>
		</actionsequences>
		<labels/>
	</resources>
</skuid__page>
